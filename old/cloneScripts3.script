disableLog('getServerUsedRam')
disableLog('getServerMaxRam')
/*disableLog('getServerMaxMoney')
disableLog('getServerMinSecurityLevel')
disableLog('scp')*/
disableLog('scan');
script2 = "base.js";
if (args[2] == null) {
	script = "base2.js";
} else {
	script = args[2];
}
servers = ["home"];
for (i = 0; i < servers.length; i++) {
	thisScan = scan(servers[i]);
	// Loop through results of the scan, and add any new servers
	for (j = 0; j < thisScan.length; j++) {
		// If this server isn't in servers, add it
		if (servers.indexOf(thisScan[j]) === -1) {
			servers.push(thisScan[j]);
		}
	}
}
if(args[0]!=null)
	server = args[0];
else
	server="home";
if(args[1]!=null)
	perc=args[1];
else
	perc=99;
ramScript = getScriptRam(script);
if(server=='ALL'){
	for (var i = 1; i < servers.length; i++) {
		hackServer = servers[i]
		for (var j = 0; j < servers.length; j++){
			server=servers[j]
			ram = (getServerMaxRam(server)/ 100) * perc;
			if (ram > 2) {
				while(ram>=getServerMaxRam(server)-getServerUsedRam(server)){}
				thread = ram / ramScript;
				if(getServerMaxMoney(hackServer)>0){
					scp(script, server)
					exec(script, server, thread, hackServer, getServerMaxMoney(hackServer), getServerMinSecurityLevel(hackServer))
				}
			}
		}
		servers.splice(0, 1);
		i--;
	}
}
else{
	ram = (getServerMaxRam(server)/ 100) * perc;
	for (var i = 0; i < servers.length; i++) {
		hackServer = servers[i]
		if (ram > 2) {
			while(ram>=getServerMaxRam(server)-getServerUsedRam(server)){}
			thread = ram / ramScript;
			if(getServerMaxMoney(hackServer)>0){
				scp(script, server)
				exec(script, server, thread, hackServer, getServerMaxMoney(hackServer), getServerMinSecurityLevel(hackServer))
			}
		}
	}
}